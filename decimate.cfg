# -*- coding: utf-8 -*-
# vim: set ft=python :

import decimate.projects
from decimate.projects.svn import *
from decimate.projects.ant import *
from decimate.projects.statuspublishing import *
from decimate.projects.otherbuilds import *
from decimate.projects.emailnotify import *
from decimate.projects.filespublishing import *
from decimate.projects.junitpublishingant import *
from decimate.projects.cfl import *

import os
import re
import glob

thisProject = "Reviki"
emailAddresses = ["reviki-dev@corefiling.com"]
baseSvnPath = "reviki/branches/dsl"
svnUrls = ["http://svn.reviki.org/svn/" + baseSvnPath]

web = urlImport("http://svn.dsl.local/svn/devel/decimate/sharedConfigs/trunk/web.py")


class RevikiProject(StatusPublishingProject):
    name = thisProject
    category = "3rd Party"
    provides = {"default": "Build"}

    def getTestConfigurations(self):
        return [
            BuildDist("Build", platform = "linux2", jdk = "1.5"),
            WebTests("Web Tests", platform = "linux2", jdk = "1.6"),
         ]


class BuildDist(StatusPublishingTestConfiguration, SvnTestConfiguration, EmailTestConfiguration, JUnitPublishingAntTestConfiguration, AntTestConfiguration, ExpiringArchiveTestConfiguration):
    svnUrls = svnUrls
    emailAddresses = emailAddresses
    antTargets = [(baseSvnPath, "unit-tests"), (baseSvnPath, "war")]
    publishFilesBase = baseSvnPath
    publishFiles = ["*.war"]
    xmlJUnitResultsPatterns = [os.path.join(baseSvnPath, "reports", "*.xml")]


class WebTests(StatusPublishingTestConfiguration, OtherBuildsTestConfiguration, EmailTestConfiguration, SvnTestConfiguration, AntTestConfiguration, web.JettyTestConfiguration):
    svnUrls = svnUrls
    emailAddresses = emailAddresses
    antTargets = [(baseSvnPath, "functional-tests-junit")]
    otherBuilds = [{"projectName": thisProject, "copyFiles": [{"from":"", "to":""}]}]

    revikiDataDir = os.path.join(os.getcwd(), "reviki-data-dir")
    revikiSvnBase = "http://draa.dsl.local/svn/test/"
    revikiSvnData = revikiSvnBase + "decimate-test-wiki-data"

    jettyContextParameters = {
        "javax.servlet.jsp.jstl.fmt.timeZone": "Europe/London",
        "reviki-data-dir": revikiDataDir,
    }

    def runTests(self):
        self.log("Configuring reviki")
        self._writeConfigFile()
        self.antProperties.extend([
            "wiki.url=" + self.jettyUrl.rstrip("/"),
            "wiki.svn=" + self.revikiSvnBase,
            "wiki.username=user1",
            "wiki.password=password1",
            "wiki.altusername=user2",
            "wiki.altpassword=password2",
        ])
        return super(WebTests, self).runTests()

    def _writeConfigFile(self):
        os.mkdir(self.revikiDataDir)
        out = open(os.path.join(self.revikiDataDir, "reviki.properties"), "w")
        try:
            out.write("svn-url-test=%s\n" % (self.revikiSvnData.replace(":", r"\:"),))
        finally:
            out.close()

