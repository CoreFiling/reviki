<project name="reviki" default="war" basedir=".">

  <property name="source" value="src" />   
  <property name="web" value="WebContent" />   
  <property name="build-classes" value="ant-build/classes" />   
  <property name="build-web" value="ant-build/web" />   
  <property name="reports" value="reports" />   
  <property name="war" value="${ant.project.name}.war" />   
  <property name="prepopulated-pages" value="net/hillsdon/reviki/web/vcintegration/prepopulated/**"/>

  <property name="source-webtests" value="webtests" />   
  <property name="build-webtests" value="ant-build/webtests" />   
  <property name="tomcat" value="tomcat"/>
  <property name="tomcat-url" value="http://mirror.ox.ac.uk/sites/rsync.apache.org/tomcat/tomcat-6/v6.0.18/bin/apache-tomcat-6.0.18.zip"/>
  <!-- For now, to run the functional tests you need to set up SVN and reviki.properties manually.
       The wiki should be called 'test' (with no base URL set).

       An external properties file is used to retrieve the username and password to use.
       Supply the testwiki.username and testwiki.password properties in build.properties. -->
  <property file="build.properties" />

  <path id="classpath">
     <fileset dir="lib">
        <include name="*.jar" />
     </fileset>
     <fileset dir="${web}/WEB-INF/lib">
        <include name="*.jar" />
     </fileset>
  </path>    

  <target name="init">
     <mkdir dir="${build-classes}" />
     <mkdir dir="${build-web}" />
     <mkdir dir="${build-webtests}" />
     <mkdir dir="${reports}" />
     <exec outputproperty="revision" executable="svnversion"/>
  </target>

  <target name="clean">
    <delete dir="${build-classes}" />
    <delete dir="${build-web}" />
    <delete dir="${build-webtests}" />
    <delete dir="${reports}" />
    <delete file="${war}"/>
    <delete dir="${tomcat}" />
    <!-- We leave the tomcat zip as it is a large download. -->
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${source}" destdir="${build-classes}" fork="yes" target="1.5" debug="true">
      <compilerarg value="-Xlint:unchecked" />
      <classpath refid="classpath" />
    </javac>
    <copy todir="${build-web}">
      <fileset dir="${web}">
        <include name="*/**"/>
      </fileset>
    </copy>
    <replace file="${build-web}/WEB-INF/templates/SiteTemplate.jsp" token="$BuildRevision$" value="${revision}"/>
    <copy todir="${build-classes}">
      <fileset dir="${source}">
        <include name="**/*.json"/>
        <include name="**/*.jar"/>
        <include name="**/*.xml"/>
        <include name="${prepopulated-pages}"/>
        <include name="net/hillsdon/reviki/web/taglib/reviki.tld"/>
      </fileset>
    </copy>
  </target>

  <target name="functional-tests-compile" depends="compile">
    <javac srcdir="${source-webtests}" destdir="${build-webtests}" target="1.5" debug="true">
      <classpath>
        <path refid="classpath" />
        <pathelement location="${build-classes}"/>
      </classpath>
    </javac>
  </target>

  <target name="taglib-jar" depends="compile">
    <mkdir dir="${build-classes}/META-INF"/>
    <move file="${build-classes}/net/hillsdon/reviki/web/taglib/reviki.tld" tofile="${build-classes}/META-INF/reviki.tld"/>
    <jar destfile="WebContent/WEB-INF/lib/reviki-tlds.jar" >
      <fileset dir="${build-classes}">
        <include name="net/hillsdon/reviki/web/taglib/**/*.class"/>
      </fileset>
      <metainf dir="${build-classes}/META-INF">
        <include name="**/*"/>
      </metainf>
    </jar>
  </target>

  <target name="unit-tests" depends="compile">
    <junit printsummary="yes" haltonfailure="yes">
      <formatter type="plain" usefile="false"/>
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${build-classes}"/>
      </classpath>
      <formatter type="xml"/>
      <batchtest todir="${reports}">
        <fileset dir="${source}">
          <include name="**/Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="war" depends="compile">
    <war warfile="${war}"
         webxml="${build-web}/WEB-INF/web.xml">
       <classes dir="${build-classes}">
         <include name="**/*.class"/>
         <include name="${prepopulated-pages}"/>
       </classes>
       <fileset dir="${build-web}">
         <include name="**/*"/>
         <exclude name="WEB-INF/**/*"/>
       </fileset>
       <webinf dir="${build-web}/WEB-INF" includes="**" excludes="web.xml" />
    </war>
  </target>

  <target name="prepare-tomcat">
    <mkdir dir="${tomcat}"/>
    <get src="${tomcat-url}" dest="tomcat.zip" usetimestamp="true" />

    <!-- Use regexpmapper directly with unzip when we can depend on Ant 1.7. -->    
    <mkdir dir="${tomcat}-unziphelper"/>
    <unzip src="tomcat.zip" dest="${tomcat}-unziphelper"/>
    <copy todir="${tomcat}">
      <fileset dir="${tomcat}-unziphelper" includes="**/*"/>
      <regexpmapper handledirsep="true" from="apache-tomcat-.*?/(.*)" to="\1"/>
    </copy>
    <delete dir="${tomcat}-unziphelper"/>

    <!-- Would be really useful to munge the port numbers to something unusual here,
         8080 will often conflict with something else.  Perhaps some XSLT? -->
    <chmod dir="${tomcat}/bin" includes="**/*.sh" perm="u+x" />
  </target>

  <target name="deploy" depends="war, prepare-tomcat">
    <property name="deploy-dir" value="${tomcat}/conf/Catalina/localhost"/>
    <mkdir dir="${deploy-dir}"/>
    <copy file="context.xml" tofile="${deploy-dir}/reviki.xml"/>
  </target>

  <target name="start-tomcat">
    <!-- XXX: Is there a platform independent way to start/stop tomcat? -->
    <exec executable="${tomcat}/bin/startup.sh"/>
    <waitfor maxwait="15" maxwaitunit="second" checkevery="500" timeoutproperty="start-tomcat-failed">
      <http url="http://localhost:8080/reviki/"/>
    </waitfor>
    <fail if="start-tomcat-failed" />
  </target>

  <target name="stop-tomcat">
    <exec executable="${tomcat}/bin/shutdown.sh"/>
  </target>

  <target name="functional-tests" depends="deploy, functional-tests-compile">
    <antcall target="start-tomcat" />
    <junit printsummary="yes" fork="yes" forkmode="once" failureproperty="functional-tests-failed">
      <jvmarg value="-Dwiki.username=${testwiki.username}" />
      <jvmarg value="-Dwiki.password=${testwiki.password}" />
      <formatter type="plain" usefile="false"/>
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${build-classes}"/>
        <pathelement location="${build-webtests}"/>
      </classpath>
      <formatter type="xml"/>
      <batchtest todir="${reports}">
        <fileset dir="${source-webtests}">
          <include name="**/Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
    <antcall target="stop-tomcat" />
    <fail if="functional-tests-failed" />
  </target>

  <target name="all-tests" depends="unit-tests, functional-tests"/>

</project>

