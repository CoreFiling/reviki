package net.hillsdon.reviki.wiki.renderer.creole.ast;

import java.util.List;

/**
 * Abstract class for AST nodes with an associated XHTML tag.
 *
 * @author msw
 */
public abstract class TaggedNode extends ASTNode {
  /**
   * Most elements have a consistent CSS class. Links and images are an
   * exception (as can be seen in their implementation), as their HTML is
   * generated by a link handler.
   */
  public static final String CSS_CLASS_ATTR = "class='wiki-content'";

  /**
   * The XHTML tag.
   */
  private final String _tag;

  /**
   * Construct a new tagged node.
   *
   * @param tag The tag.
   * @param children Any child elements of the node.
   */
  public TaggedNode(final String tag, final List<ASTNode> children) {
    super(children);
    _tag = tag;
  }

  /**
   * Helper method for elements with just one child. See
   * {@link #ASTNode(String, List)}.
   */
  public TaggedNode(final String tag, final ASTNode body) {
    super(body);
    _tag = tag;
  }

  /**
   * Helper method for elements with no children. See
   * {@link #ASTNode(String, List).
   */
  public TaggedNode(final String tag) {
    _tag = tag;
  }

  /**
   * Get the tag.
   */
  public String tag() {
    return _tag;
  }

  /**
   * Produce a valid XHTML representation (assuming valid implementations of
   * toXHTML for all direct and indirect children) of the node.
   */
  public String toXHTML() {
    // Render the children
    String inner = innerXHTML();

    // Render the tag
    if (inner.equals("")) {
      return "<" + tag() + " " + CSS_CLASS_ATTR + " />";
    }
    else {
      return "<" + tag() + " " + CSS_CLASS_ATTR + ">" + inner + "</" + tag() + ">";
    }
  }

  /**
   * Render just the children to XHTML.
   */
  public String innerXHTML() {
    return super.toXHTML();
  }
}
